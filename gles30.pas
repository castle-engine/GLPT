{$mode objfpc}

unit gles30;
interface

{$ifdef fpc}
{$packrecords c}
{$endif}

{$macro on}

{$ifdef windows}
  {$define GLES30_CALL:=stdcall}
{$else}
  {$define GLES30_CALL:=cdecl}
{$endif}

type
  PGLubyte = ^GLubyte;
  PGLboolean  = ^GLboolean;
  PGLenum  = ^GLenum;
  PGLfloat  = ^GLfloat;
  PGLint  = ^GLint;
  PGLsizei  = ^GLsizei;
  PGLuint  = ^GLuint;
  PGLint64 = ^GLint64;

  GLvoid = pointer;
  TGLvoid = GLvoid;

  GLenum = dword;
  TGLenum = GLenum;

  GLboolean = byte;
  TGLboolean = GLboolean;

  GLbitfield = dword;
  TGLbitfield = GLbitfield;

  GLChar = char;
  TGLChar = GLChar;

  GLbyte = shortint;
  TGLbyte = GLbyte;

  GLshort = smallint;
  TGLshort = GLshort;

  GLint = longint;
  TGLint = GLint;

  GLsizei = longint;
  TGLsizei = GLsizei;

  GLubyte = byte;
  TGLubyte = GLubyte;

  GLushort = word;
  TGLushort = GLushort;

  GLuint = longword;
  TGLuint = GLuint;
  
  GLuint64 = uint64;
  TGLuint64 = GLuint64;

  GLint64 = int64;
  TGLint64 = GLint64;

  GLfloat = single;
  TGLfloat = GLfloat;

  GLclampf = single;
  TGLclampf = GLclampf;

  GLfixed = longint;
  TGLfixed = GLfixed;

  GLintptr = ptrint;

  GLsizeiptr = ptrint;

  GLsync = record end;

{ OpenGL ES core versions  }
const
  GL_DEPTH_BUFFER_BIT = $00000100;    
  GL_STENCIL_BUFFER_BIT = $00000400;    
  GL_COLOR_BUFFER_BIT = $00004000;    
  GL_FALSE = 0;    
  GL_TRUE = 1;    
  GL_POINTS = $0000;    
  GL_LINES = $0001;    
  GL_LINE_LOOP = $0002;    
  GL_LINE_STRIP = $0003;    
  GL_TRIANGLES = $0004;    
  GL_TRIANGLE_STRIP = $0005;    
  GL_TRIANGLE_FAN = $0006;    
  GL_ZERO = 0;    
  GL_ONE = 1;    
  GL_SRC_COLOR = $0300;    
  GL_ONE_MINUS_SRC_COLOR = $0301;    
  GL_SRC_ALPHA = $0302;    
  GL_ONE_MINUS_SRC_ALPHA = $0303;    
  GL_DST_ALPHA = $0304;    
  GL_ONE_MINUS_DST_ALPHA = $0305;    
  GL_DST_COLOR = $0306;    
  GL_ONE_MINUS_DST_COLOR = $0307;    
  GL_SRC_ALPHA_SATURATE = $0308;    
  GL_FUNC_ADD = $8006;    
  GL_BLEND_EQUATION = $8009;    
  GL_BLEND_EQUATION_RGB = $8009;    
  GL_BLEND_EQUATION_ALPHA = $883D;    
  GL_FUNC_SUBTRACT = $800A;    
  GL_FUNC_REVERSE_SUBTRACT = $800B;    
  GL_BLEND_DST_RGB = $80C8;    
  GL_BLEND_SRC_RGB = $80C9;    
  GL_BLEND_DST_ALPHA = $80CA;    
  GL_BLEND_SRC_ALPHA = $80CB;    
  GL_CONSTANT_COLOR = $8001;    
  GL_ONE_MINUS_CONSTANT_COLOR = $8002;    
  GL_CONSTANT_ALPHA = $8003;    
  GL_ONE_MINUS_CONSTANT_ALPHA = $8004;    
  GL_BLEND_COLOR = $8005;    
  GL_ARRAY_BUFFER = $8892;    
  GL_ELEMENT_ARRAY_BUFFER = $8893;    
  GL_ARRAY_BUFFER_BINDING = $8894;    
  GL_ELEMENT_ARRAY_BUFFER_BINDING = $8895;    
  GL_STREAM_DRAW = $88E0;    
  GL_STATIC_DRAW = $88E4;    
  GL_DYNAMIC_DRAW = $88E8;    
  GL_BUFFER_SIZE = $8764;    
  GL_BUFFER_USAGE = $8765;    
  GL_CURRENT_VERTEX_ATTRIB = $8626;    
  GL_FRONT = $0404;    
  GL_BACK = $0405;    
  GL_FRONT_AND_BACK = $0408;    
  GL_TEXTURE_2D = $0DE1;    
  GL_CULL_FACE = $0B44;    
  GL_BLEND = $0BE2;    
  GL_DITHER = $0BD0;    
  GL_STENCIL_TEST = $0B90;    
  GL_DEPTH_TEST = $0B71;    
  GL_SCISSOR_TEST = $0C11;    
  GL_POLYGON_OFFSET_FILL = $8037;    
  GL_SAMPLE_ALPHA_TO_COVERAGE = $809E;    
  GL_SAMPLE_COVERAGE = $80A0;    
  GL_NO_ERROR = 0;    
  GL_INVALID_ENUM = $0500;    
  GL_INVALID_VALUE = $0501;    
  GL_INVALID_OPERATION = $0502;    
  GL_OUT_OF_MEMORY = $0505;    
  GL_CW = $0900;    
  GL_CCW = $0901;    
  GL_LINE_WIDTH = $0B21;    
  GL_ALIASED_POINT_SIZE_RANGE = $846D;    
  GL_ALIASED_LINE_WIDTH_RANGE = $846E;    
  GL_CULL_FACE_MODE = $0B45;    
  GL_FRONT_FACE = $0B46;    
  GL_DEPTH_RANGE = $0B70;    
  GL_DEPTH_WRITEMASK = $0B72;    
  GL_DEPTH_CLEAR_VALUE = $0B73;    
  GL_DEPTH_FUNC = $0B74;    
  GL_STENCIL_CLEAR_VALUE = $0B91;    
  GL_STENCIL_FUNC = $0B92;    
  GL_STENCIL_FAIL = $0B94;    
  GL_STENCIL_PASS_DEPTH_FAIL = $0B95;    
  GL_STENCIL_PASS_DEPTH_PASS = $0B96;    
  GL_STENCIL_REF = $0B97;    
  GL_STENCIL_VALUE_MASK = $0B93;    
  GL_STENCIL_WRITEMASK = $0B98;    
  GL_STENCIL_BACK_FUNC = $8800;    
  GL_STENCIL_BACK_FAIL = $8801;    
  GL_STENCIL_BACK_PASS_DEPTH_FAIL = $8802;    
  GL_STENCIL_BACK_PASS_DEPTH_PASS = $8803;    
  GL_STENCIL_BACK_REF = $8CA3;    
  GL_STENCIL_BACK_VALUE_MASK = $8CA4;    
  GL_STENCIL_BACK_WRITEMASK = $8CA5;    
  GL_VIEWPORT = $0BA2;    
  GL_SCISSOR_BOX = $0C10;    
  GL_COLOR_CLEAR_VALUE = $0C22;    
  GL_COLOR_WRITEMASK = $0C23;    
  GL_UNPACK_ALIGNMENT = $0CF5;    
  GL_PACK_ALIGNMENT = $0D05;    
  GL_MAX_TEXTURE_SIZE = $0D33;    
  GL_MAX_VIEWPORT_DIMS = $0D3A;    
  GL_SUBPIXEL_BITS = $0D50;    
  GL_RED_BITS = $0D52;    
  GL_GREEN_BITS = $0D53;    
  GL_BLUE_BITS = $0D54;    
  GL_ALPHA_BITS = $0D55;    
  GL_DEPTH_BITS = $0D56;    
  GL_STENCIL_BITS = $0D57;    
  GL_POLYGON_OFFSET_UNITS = $2A00;    
  GL_POLYGON_OFFSET_FACTOR = $8038;    
  GL_TEXTURE_BINDING_2D = $8069;    
  GL_SAMPLE_BUFFERS = $80A8;    
  GL_SAMPLES = $80A9;    
  GL_SAMPLE_COVERAGE_VALUE = $80AA;    
  GL_SAMPLE_COVERAGE_INVERT = $80AB;    
  GL_NUM_COMPRESSED_TEXTURE_FORMATS = $86A2;    
  GL_COMPRESSED_TEXTURE_FORMATS = $86A3;    
  GL_DONT_CARE = $1100;    
  GL_FASTEST = $1101;    
  GL_NICEST = $1102;    
  GL_GENERATE_MIPMAP_HINT = $8192;    
  GL_BYTE = $1400;    
  GL_UNSIGNED_BYTE = $1401;    
  GL_SHORT = $1402;    
  GL_UNSIGNED_SHORT = $1403;    
  GL_INT = $1404;    
  GL_UNSIGNED_INT = $1405;    
  GL_FLOAT = $1406;    
  GL_FIXED = $140C;    
  GL_DEPTH_COMPONENT = $1902;    
  GL_ALPHA = $1906;    
  GL_RGB = $1907;    
  GL_RGBA = $1908;    
  GL_LUMINANCE = $1909;    
  GL_LUMINANCE_ALPHA = $190A;    
  GL_UNSIGNED_SHORT_4_4_4_4 = $8033;    
  GL_UNSIGNED_SHORT_5_5_5_1 = $8034;    
  GL_UNSIGNED_SHORT_5_6_5 = $8363;    
  GL_FRAGMENT_SHADER = $8B30;    
  GL_VERTEX_SHADER = $8B31;    
  GL_MAX_VERTEX_ATTRIBS = $8869;    
  GL_MAX_VERTEX_UNIFORM_VECTORS = $8DFB;    
  GL_MAX_VARYING_VECTORS = $8DFC;    
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = $8B4D;    
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = $8B4C;    
  GL_MAX_TEXTURE_IMAGE_UNITS = $8872;    
  GL_MAX_FRAGMENT_UNIFORM_VECTORS = $8DFD;    
  GL_SHADER_TYPE = $8B4F;    
  GL_DELETE_STATUS = $8B80;    
  GL_LINK_STATUS = $8B82;    
  GL_VALIDATE_STATUS = $8B83;    
  GL_ATTACHED_SHADERS = $8B85;    
  GL_ACTIVE_UNIFORMS = $8B86;    
  GL_ACTIVE_UNIFORM_MAX_LENGTH = $8B87;    
  GL_ACTIVE_ATTRIBUTES = $8B89;    
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = $8B8A;    
  GL_SHADING_LANGUAGE_VERSION = $8B8C;    
  GL_CURRENT_PROGRAM = $8B8D;    
  GL_NEVER = $0200;    
  GL_LESS = $0201;    
  GL_EQUAL = $0202;    
  GL_LEQUAL = $0203;    
  GL_GREATER = $0204;    
  GL_NOTEQUAL = $0205;    
  GL_GEQUAL = $0206;    
  GL_ALWAYS = $0207;    
  GL_KEEP = $1E00;    
  GL_REPLACE = $1E01;    
  GL_INCR = $1E02;    
  GL_DECR = $1E03;    
  GL_INVERT = $150A;    
  GL_INCR_WRAP = $8507;    
  GL_DECR_WRAP = $8508;    
  GL_VENDOR = $1F00;    
  GL_RENDERER = $1F01;    
  GL_VERSION = $1F02;    
  GL_EXTENSIONS = $1F03;    
  GL_NEAREST = $2600;    
  GL_LINEAR = $2601;    
  GL_NEAREST_MIPMAP_NEAREST = $2700;    
  GL_LINEAR_MIPMAP_NEAREST = $2701;    
  GL_NEAREST_MIPMAP_LINEAR = $2702;    
  GL_LINEAR_MIPMAP_LINEAR = $2703;    
  GL_TEXTURE_MAG_FILTER = $2800;    
  GL_TEXTURE_MIN_FILTER = $2801;    
  GL_TEXTURE_WRAP_S = $2802;    
  GL_TEXTURE_WRAP_T = $2803;    
  GL_TEXTURE = $1702;    
  GL_TEXTURE_CUBE_MAP = $8513;    
  GL_TEXTURE_BINDING_CUBE_MAP = $8514;    
  GL_TEXTURE_CUBE_MAP_POSITIVE_X = $8515;    
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X = $8516;    
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y = $8517;    
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = $8518;    
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z = $8519;    
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = $851A;    
  GL_MAX_CUBE_MAP_TEXTURE_SIZE = $851C;    
  GL_TEXTURE0 = $84C0;    
  GL_TEXTURE1 = $84C1;    
  GL_TEXTURE2 = $84C2;    
  GL_TEXTURE3 = $84C3;    
  GL_TEXTURE4 = $84C4;    
  GL_TEXTURE5 = $84C5;    
  GL_TEXTURE6 = $84C6;    
  GL_TEXTURE7 = $84C7;    
  GL_TEXTURE8 = $84C8;    
  GL_TEXTURE9 = $84C9;    
  GL_TEXTURE10 = $84CA;    
  GL_TEXTURE11 = $84CB;    
  GL_TEXTURE12 = $84CC;    
  GL_TEXTURE13 = $84CD;    
  GL_TEXTURE14 = $84CE;    
  GL_TEXTURE15 = $84CF;    
  GL_TEXTURE16 = $84D0;    
  GL_TEXTURE17 = $84D1;    
  GL_TEXTURE18 = $84D2;    
  GL_TEXTURE19 = $84D3;    
  GL_TEXTURE20 = $84D4;    
  GL_TEXTURE21 = $84D5;    
  GL_TEXTURE22 = $84D6;    
  GL_TEXTURE23 = $84D7;    
  GL_TEXTURE24 = $84D8;    
  GL_TEXTURE25 = $84D9;    
  GL_TEXTURE26 = $84DA;    
  GL_TEXTURE27 = $84DB;    
  GL_TEXTURE28 = $84DC;    
  GL_TEXTURE29 = $84DD;    
  GL_TEXTURE30 = $84DE;    
  GL_TEXTURE31 = $84DF;    
  GL_ACTIVE_TEXTURE = $84E0;    
  GL_REPEAT = $2901;    
  GL_CLAMP_TO_EDGE = $812F;    
  GL_MIRRORED_REPEAT = $8370;    
  GL_FLOAT_VEC2 = $8B50;    
  GL_FLOAT_VEC3 = $8B51;    
  GL_FLOAT_VEC4 = $8B52;    
  GL_INT_VEC2 = $8B53;    
  GL_INT_VEC3 = $8B54;    
  GL_INT_VEC4 = $8B55;    
  GL_BOOL = $8B56;    
  GL_BOOL_VEC2 = $8B57;    
  GL_BOOL_VEC3 = $8B58;    
  GL_BOOL_VEC4 = $8B59;    
  GL_FLOAT_MAT2 = $8B5A;    
  GL_FLOAT_MAT3 = $8B5B;    
  GL_FLOAT_MAT4 = $8B5C;    
  GL_SAMPLER_2D = $8B5E;    
  GL_SAMPLER_CUBE = $8B60;    
  GL_VERTEX_ATTRIB_ARRAY_ENABLED = $8622;    
  GL_VERTEX_ATTRIB_ARRAY_SIZE = $8623;    
  GL_VERTEX_ATTRIB_ARRAY_STRIDE = $8624;    
  GL_VERTEX_ATTRIB_ARRAY_TYPE = $8625;    
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = $886A;    
  GL_VERTEX_ATTRIB_ARRAY_POINTER = $8645;    
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = $889F;    
  GL_IMPLEMENTATION_COLOR_READ_TYPE = $8B9A;    
  GL_IMPLEMENTATION_COLOR_READ_FORMAT = $8B9B;    
  GL_COMPILE_STATUS = $8B81;    
  GL_INFO_LOG_LENGTH = $8B84;    
  GL_SHADER_SOURCE_LENGTH = $8B88;    
  GL_SHADER_COMPILER = $8DFA;    
  GL_SHADER_BINARY_FORMATS = $8DF8;    
  GL_NUM_SHADER_BINARY_FORMATS = $8DF9;    
  GL_LOW_FLOAT = $8DF0;    
  GL_MEDIUM_FLOAT = $8DF1;    
  GL_HIGH_FLOAT = $8DF2;    
  GL_LOW_INT = $8DF3;    
  GL_MEDIUM_INT = $8DF4;    
  GL_HIGH_INT = $8DF5;    
  GL_FRAMEBUFFER = $8D40;    
  GL_RENDERBUFFER = $8D41;    
  GL_RGBA4 = $8056;    
  GL_RGB5_A1 = $8057;    
  GL_RGB565 = $8D62;    
  GL_DEPTH_COMPONENT16 = $81A5;    
  GL_STENCIL_INDEX8 = $8D48;    
  GL_RENDERBUFFER_WIDTH = $8D42;    
  GL_RENDERBUFFER_HEIGHT = $8D43;    
  GL_RENDERBUFFER_INTERNAL_FORMAT = $8D44;    
  GL_RENDERBUFFER_RED_SIZE = $8D50;    
  GL_RENDERBUFFER_GREEN_SIZE = $8D51;    
  GL_RENDERBUFFER_BLUE_SIZE = $8D52;    
  GL_RENDERBUFFER_ALPHA_SIZE = $8D53;    
  GL_RENDERBUFFER_DEPTH_SIZE = $8D54;    
  GL_RENDERBUFFER_STENCIL_SIZE = $8D55;    
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = $8CD0;    
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = $8CD1;    
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = $8CD2;    
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = $8CD3;    
  GL_COLOR_ATTACHMENT0 = $8CE0;    
  GL_DEPTH_ATTACHMENT = $8D00;    
  GL_STENCIL_ATTACHMENT = $8D20;    
  GL_NONE = 0;    
  GL_FRAMEBUFFER_COMPLETE = $8CD5;    
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = $8CD6;    
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = $8CD7;    
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = $8CD9;    
  GL_FRAMEBUFFER_UNSUPPORTED = $8CDD;    
  GL_FRAMEBUFFER_BINDING = $8CA6;    
  GL_RENDERBUFFER_BINDING = $8CA7;    
  GL_MAX_RENDERBUFFER_SIZE = $84E8;    
  GL_INVALID_FRAMEBUFFER_OPERATION = $0506;    

var
  glActiveTexture : procedure(texture:GLenum);GLES30_CALL;
  glAttachShader : procedure(programID:GLuint; shader:GLuint);GLES30_CALL;
  glBindAttribLocation : procedure(programID:GLuint; index:GLuint; name:pchar);GLES30_CALL;
  glBindBuffer : procedure(target:GLenum; buffer:GLuint);GLES30_CALL;
  glBindFramebuffer : procedure(target:GLenum; framebuffer:GLuint);GLES30_CALL;
  glBindRenderbuffer : procedure(target:GLenum; renderbuffer:GLuint);GLES30_CALL;
  glBindTexture : procedure(target:GLenum; texture:GLuint);GLES30_CALL;
  glBlendColor : procedure(red:GLfloat; green:GLfloat; blue:GLfloat; alpha:GLfloat);GLES30_CALL;
  glBlendEquation : procedure(mode:GLenum);GLES30_CALL;
  glBlendEquationSeparate : procedure(modeRGB:GLenum; modeAlpha:GLenum);GLES30_CALL;
  glBlendFunc : procedure(sfactor:GLenum; dfactor:GLenum);GLES30_CALL;
  glBlendFuncSeparate : procedure(sfactorRGB:GLenum; dfactorRGB:GLenum; sfactorAlpha:GLenum; dfactorAlpha:GLenum);GLES30_CALL;
  glBufferData : procedure(target:GLenum; size:GLsizeiptr; data:pointer; usage:GLenum);GLES30_CALL;
  glBufferSubData : procedure(target:GLenum; offset:GLintptr; size:GLsizeiptr; data:pointer);GLES30_CALL;
  glCheckFramebufferStatus : function(target:GLenum):GLenum;GLES30_CALL;
  glClear : procedure(mask:GLbitfield);GLES30_CALL;
  glClearColor : procedure(red:GLfloat; green:GLfloat; blue:GLfloat; alpha:GLfloat);GLES30_CALL;
  glClearDepthf : procedure(d:GLfloat);GLES30_CALL;
  glClearStencil : procedure(s:GLint);GLES30_CALL;
  glColorMask : procedure(red:GLboolean; green:GLboolean; blue:GLboolean; alpha:GLboolean);GLES30_CALL;
  glCompileShader : procedure(shader:GLuint);GLES30_CALL;
  glCompressedTexImage2D : procedure(target:GLenum; level:GLint; internalformat:GLenum; width:GLsizei; height:GLsizei; 
    border:GLint; imageSize:GLsizei; data:pointer);GLES30_CALL;
  glCompressedTexSubImage2D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; width:GLsizei; 
    height:GLsizei; format:GLenum; imageSize:GLsizei; data:pointer);GLES30_CALL;
  glCopyTexImage2D : procedure(target:GLenum; level:GLint; internalformat:GLenum; x:GLint; y:GLint; 
    width:GLsizei; height:GLsizei; border:GLint);GLES30_CALL;
  glCopyTexSubImage2D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; x:GLint; 
    y:GLint; width:GLsizei; height:GLsizei);GLES30_CALL;
  glCreateProgram : function:GLuint;GLES30_CALL;
  glCreateShader : function(_type:GLenum):GLuint;GLES30_CALL;
  glCullFace : procedure(mode:GLenum);GLES30_CALL;
  glDeleteBuffers : procedure(n:GLsizei; buffers:PGLuint);GLES30_CALL;
  glDeleteFramebuffers : procedure(n:GLsizei; framebuffers:PGLuint);GLES30_CALL;
  glDeleteProgram : procedure(programID:GLuint);GLES30_CALL;
  glDeleteRenderbuffers : procedure(n:GLsizei; renderbuffers:PGLuint);GLES30_CALL;
  glDeleteShader : procedure(shader:GLuint);GLES30_CALL;
  glDeleteTextures : procedure(n:GLsizei; textures:PGLuint);GLES30_CALL;
  glDepthFunc : procedure(func:GLenum);GLES30_CALL;
  glDepthMask : procedure(flag:GLboolean);GLES30_CALL;
  glDepthRangef : procedure(n:GLfloat; f:GLfloat);GLES30_CALL;
  glDetachShader : procedure(programID:GLuint; shader:GLuint);GLES30_CALL;
  glDisable : procedure(cap:GLenum);GLES30_CALL;
  glDisableVertexAttribArray : procedure(index:GLuint);GLES30_CALL;
  glDrawArrays : procedure(mode:GLenum; first:GLint; count:GLsizei);GLES30_CALL;
  glDrawElements : procedure(mode:GLenum; count:GLsizei; _type:GLenum; indices:pointer);GLES30_CALL;
  glEnable : procedure(cap:GLenum);GLES30_CALL;
  glEnableVertexAttribArray : procedure(index:GLuint);GLES30_CALL;
  glFinish : procedure;GLES30_CALL;
  glFlush : procedure;GLES30_CALL;
  glFramebufferRenderbuffer : procedure(target:GLenum; attachment:GLenum; renderbuffertarget:GLenum; renderbuffer:GLuint);GLES30_CALL;
  glFramebufferTexture2D : procedure(target:GLenum; attachment:GLenum; textarget:GLenum; texture:GLuint; level:GLint);GLES30_CALL;
  glFrontFace : procedure(mode:GLenum);GLES30_CALL;
  glGenBuffers : procedure(n:GLsizei; buffers:PGLuint);GLES30_CALL;
  glGenerateMipmap : procedure(target:GLenum);GLES30_CALL;
  glGenFramebuffers : procedure(n:GLsizei; framebuffers:PGLuint);GLES30_CALL;
  glGenRenderbuffers : procedure(n:GLsizei; renderbuffers:PGLuint);GLES30_CALL;
  glGenTextures : procedure(n:GLsizei; textures:PGLuint);GLES30_CALL;
  glGetActiveAttrib : procedure(programID:GLuint; index:GLuint; bufSize:GLsizei; length:PGLsizei; size:PGLint; 
    _type:PGLenum; name:pchar);GLES30_CALL;
  glGetActiveUniform : procedure(programID:GLuint; index:GLuint; bufSize:GLsizei; length:PGLsizei; size:PGLint; 
    _type:PGLenum; name:pchar);GLES30_CALL;
  glGetAttachedShaders : procedure(programID:GLuint; maxCount:GLsizei; count:PGLsizei; shaders:PGLuint);GLES30_CALL;
  glGetAttribLocation : function(programID:GLuint; name:pchar):GLint;GLES30_CALL;
  glGetBooleanv : procedure(pname:GLenum; data:PGLboolean);GLES30_CALL;
  glGetBufferParameteriv : procedure(target:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetError : function:GLenum;GLES30_CALL;
  glGetFloatv : procedure(pname:GLenum; data:PGLfloat);GLES30_CALL;
  glGetFramebufferAttachmentParameteriv : procedure(target:GLenum; attachment:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetIntegerv : procedure(pname:GLenum; data:PGLint);GLES30_CALL;
  glGetProgramiv : procedure(programID:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetProgramInfoLog : procedure(programID:GLuint; bufSize:GLsizei; length:PGLsizei; infoLog:pchar);GLES30_CALL;
  glGetRenderbufferParameteriv : procedure(target:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetShaderiv : procedure(shader:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetShaderInfoLog : procedure(shader:GLuint; bufSize:GLsizei; length:PGLsizei; infoLog:pchar);GLES30_CALL;
  glGetShaderPrecisionFormat : procedure(shadertype:GLenum; precisiontype:GLenum; range:PGLint; precision:PGLint);GLES30_CALL;
  glGetShaderSource : procedure(shader:GLuint; bufSize:GLsizei; length:PGLsizei; source:pchar);GLES30_CALL;
  glGetString : function(name:GLenum):pchar;GLES30_CALL;
  glGetTexParameterfv : procedure(target:GLenum; pname:GLenum; params:PGLfloat);GLES30_CALL;
  glGetTexParameteriv : procedure(target:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetUniformfv : procedure(programID:GLuint; location:GLint; params:PGLfloat);GLES30_CALL;
  glGetUniformiv : procedure(programID:GLuint; location:GLint; params:PGLint);GLES30_CALL;
  glGetUniformLocation : function(programID:GLuint; name:pchar):GLint;GLES30_CALL;
  glGetVertexAttribfv : procedure(index:GLuint; pname:GLenum; params:PGLfloat);GLES30_CALL;
  glGetVertexAttribiv : procedure(index:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
  glGetVertexAttribPointerv : procedure(index:GLuint; pname:GLenum; pointer:Ppointer);GLES30_CALL;
  glHint : procedure(target:GLenum; mode:GLenum);GLES30_CALL;
  glIsBuffer : function(buffer:GLuint):GLboolean;GLES30_CALL;
  glIsEnabled : function(cap:GLenum):GLboolean;GLES30_CALL;
  glIsFramebuffer : function(framebuffer:GLuint):GLboolean;GLES30_CALL;
  glIsProgram : function(programID:GLuint):GLboolean;GLES30_CALL;
  glIsRenderbuffer : function(renderbuffer:GLuint):GLboolean;GLES30_CALL;
  glIsShader : function(shader:GLuint):GLboolean;GLES30_CALL;
  glIsTexture : function(texture:GLuint):GLboolean;GLES30_CALL;
  glLineWidth : procedure(width:GLfloat);GLES30_CALL;
  glLinkProgram : procedure(programID:GLuint);GLES30_CALL;
  glPixelStorei : procedure(pname:GLenum; param:GLint);GLES30_CALL;
  glPolygonOffset : procedure(factor:GLfloat; units:GLfloat);GLES30_CALL;
  glReadPixels : procedure(x:GLint; y:GLint; width:GLsizei; height:GLsizei; format:GLenum; 
    _type:GLenum; pixels:pointer);GLES30_CALL;
  glReleaseShaderCompiler : procedure;GLES30_CALL;
  glRenderbufferStorage : procedure(target:GLenum; internalformat:GLenum; width:GLsizei; height:GLsizei);GLES30_CALL;
  glSampleCoverage : procedure(value:GLfloat; invert:GLboolean);GLES30_CALL;
  glScissor : procedure(x:GLint; y:GLint; width:GLsizei; height:GLsizei);GLES30_CALL;
  glShaderBinary : procedure(count:GLsizei; shaders:PGLuint; binaryformat:GLenum; binary:pointer; length:GLsizei);GLES30_CALL;
  glShaderSource : procedure(shader:GLuint; count:GLsizei; _string:Ppchar; length:PGLint);GLES30_CALL;
  glStencilFunc : procedure(func:GLenum; ref:GLint; mask:GLuint);GLES30_CALL;
  glStencilFuncSeparate : procedure(face:GLenum; func:GLenum; ref:GLint; mask:GLuint);GLES30_CALL;
  glStencilMask : procedure(mask:GLuint);GLES30_CALL;
  glStencilMaskSeparate : procedure(face:GLenum; mask:GLuint);GLES30_CALL;
  glStencilOp : procedure(fail:GLenum; zfail:GLenum; zpass:GLenum);GLES30_CALL;
  glStencilOpSeparate : procedure(face:GLenum; sfail:GLenum; dpfail:GLenum; dppass:GLenum);GLES30_CALL;
  glTexImage2D : procedure(target:GLenum; level:GLint; internalformat:GLint; width:GLsizei; height:GLsizei; 
    border:GLint; format:GLenum; _type:GLenum; pixels:pointer);GLES30_CALL;
  glTexParameterf : procedure(target:GLenum; pname:GLenum; param:GLfloat);GLES30_CALL;
  glTexParameterfv : procedure(target:GLenum; pname:GLenum; params:PGLfloat);GLES30_CALL;
  glTexParameteri : procedure(target:GLenum; pname:GLenum; param:GLint);GLES30_CALL;
  glTexParameteriv : procedure(target:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
  glTexSubImage2D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; width:GLsizei; 
    height:GLsizei; format:GLenum; _type:GLenum; pixels:pointer);GLES30_CALL;
  glUniform1f : procedure(location:GLint; v0:GLfloat);GLES30_CALL;
  glUniform1fv : procedure(location:GLint; count:GLsizei; value:PGLfloat);GLES30_CALL;
  glUniform1i : procedure(location:GLint; v0:GLint);GLES30_CALL;
  glUniform1iv : procedure(location:GLint; count:GLsizei; value:PGLint);GLES30_CALL;
  glUniform2f : procedure(location:GLint; v0:GLfloat; v1:GLfloat);GLES30_CALL;
  glUniform2fv : procedure(location:GLint; count:GLsizei; value:PGLfloat);GLES30_CALL;
  glUniform2i : procedure(location:GLint; v0:GLint; v1:GLint);GLES30_CALL;
  glUniform2iv : procedure(location:GLint; count:GLsizei; value:PGLint);GLES30_CALL;
  glUniform3f : procedure(location:GLint; v0:GLfloat; v1:GLfloat; v2:GLfloat);GLES30_CALL;
  glUniform3fv : procedure(location:GLint; count:GLsizei; value:PGLfloat);GLES30_CALL;
  glUniform3i : procedure(location:GLint; v0:GLint; v1:GLint; v2:GLint);GLES30_CALL;
  glUniform3iv : procedure(location:GLint; count:GLsizei; value:PGLint);GLES30_CALL;
  glUniform4f : procedure(location:GLint; v0:GLfloat; v1:GLfloat; v2:GLfloat; v3:GLfloat);GLES30_CALL;
  glUniform4fv : procedure(location:GLint; count:GLsizei; value:PGLfloat);GLES30_CALL;
  glUniform4i : procedure(location:GLint; v0:GLint; v1:GLint; v2:GLint; v3:GLint);GLES30_CALL;
  glUniform4iv : procedure(location:GLint; count:GLsizei; value:PGLint);GLES30_CALL;
  glUniformMatrix2fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
  glUniformMatrix3fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
  glUniformMatrix4fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
  glUseProgram : procedure(programID:GLuint);GLES30_CALL;
  glValidateProgram : procedure(programID:GLuint);GLES30_CALL;
  glVertexAttrib1f : procedure(index:GLuint; x:GLfloat);GLES30_CALL;
  glVertexAttrib1fv : procedure(index:GLuint; v:PGLfloat);GLES30_CALL;
  glVertexAttrib2f : procedure(index:GLuint; x:GLfloat; y:GLfloat);GLES30_CALL;
  glVertexAttrib2fv : procedure(index:GLuint; v:PGLfloat);GLES30_CALL;
  glVertexAttrib3f : procedure(index:GLuint; x:GLfloat; y:GLfloat; z:GLfloat);GLES30_CALL;
  glVertexAttrib3fv : procedure(index:GLuint; v:PGLfloat);GLES30_CALL;
  glVertexAttrib4f : procedure(index:GLuint; x:GLfloat; y:GLfloat; z:GLfloat; w:GLfloat);GLES30_CALL;
  glVertexAttrib4fv : procedure(index:GLuint; v:PGLfloat);GLES30_CALL;
  glVertexAttribPointer : procedure(index:GLuint; size:GLint; _type:GLenum; normalized:GLboolean; stride:GLsizei; 
    pointer:pointer);GLES30_CALL;
  glViewport : procedure(x:GLint; y:GLint; width:GLsizei; height:GLsizei);GLES30_CALL;

const
  GL_READ_BUFFER = $0C02;    
  GL_UNPACK_ROW_LENGTH = $0CF2;    
  GL_UNPACK_SKIP_ROWS = $0CF3;    
  GL_UNPACK_SKIP_PIXELS = $0CF4;    
  GL_PACK_ROW_LENGTH = $0D02;    
  GL_PACK_SKIP_ROWS = $0D03;    
  GL_PACK_SKIP_PIXELS = $0D04;    
  GL_COLOR = $1800;    
  GL_DEPTH = $1801;    
  GL_STENCIL = $1802;    
  GL_RED = $1903;    
  GL_RGB8 = $8051;    
  GL_RGBA8 = $8058;    
  GL_RGB10_A2 = $8059;    
  GL_TEXTURE_BINDING_3D = $806A;    
  GL_UNPACK_SKIP_IMAGES = $806D;    
  GL_UNPACK_IMAGE_HEIGHT = $806E;    
  GL_TEXTURE_3D = $806F;    
  GL_TEXTURE_WRAP_R = $8072;    
  GL_MAX_3D_TEXTURE_SIZE = $8073;    
  GL_UNSIGNED_INT_2_10_10_10_REV = $8368;    
  GL_MAX_ELEMENTS_VERTICES = $80E8;    
  GL_MAX_ELEMENTS_INDICES = $80E9;    
  GL_TEXTURE_MIN_LOD = $813A;    
  GL_TEXTURE_MAX_LOD = $813B;    
  GL_TEXTURE_BASE_LEVEL = $813C;    
  GL_TEXTURE_MAX_LEVEL = $813D;    
  GL_MIN = $8007;    
  GL_MAX = $8008;    
  GL_DEPTH_COMPONENT24 = $81A6;    
  GL_MAX_TEXTURE_LOD_BIAS = $84FD;    
  GL_TEXTURE_COMPARE_MODE = $884C;    
  GL_TEXTURE_COMPARE_FUNC = $884D;    
  GL_CURRENT_QUERY = $8865;    
  GL_QUERY_RESULT = $8866;    
  GL_QUERY_RESULT_AVAILABLE = $8867;    
  GL_BUFFER_MAPPED = $88BC;    
  GL_BUFFER_MAP_POINTER = $88BD;    
  GL_STREAM_READ = $88E1;    
  GL_STREAM_COPY = $88E2;    
  GL_STATIC_READ = $88E5;    
  GL_STATIC_COPY = $88E6;    
  GL_DYNAMIC_READ = $88E9;    
  GL_DYNAMIC_COPY = $88EA;    
  GL_MAX_DRAW_BUFFERS = $8824;    
  GL_DRAW_BUFFER0 = $8825;    
  GL_DRAW_BUFFER1 = $8826;    
  GL_DRAW_BUFFER2 = $8827;    
  GL_DRAW_BUFFER3 = $8828;    
  GL_DRAW_BUFFER4 = $8829;    
  GL_DRAW_BUFFER5 = $882A;    
  GL_DRAW_BUFFER6 = $882B;    
  GL_DRAW_BUFFER7 = $882C;    
  GL_DRAW_BUFFER8 = $882D;    
  GL_DRAW_BUFFER9 = $882E;    
  GL_DRAW_BUFFER10 = $882F;    
  GL_DRAW_BUFFER11 = $8830;    
  GL_DRAW_BUFFER12 = $8831;    
  GL_DRAW_BUFFER13 = $8832;    
  GL_DRAW_BUFFER14 = $8833;    
  GL_DRAW_BUFFER15 = $8834;    
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = $8B49;    
  GL_MAX_VERTEX_UNIFORM_COMPONENTS = $8B4A;    
  GL_SAMPLER_3D = $8B5F;    
  GL_SAMPLER_2D_SHADOW = $8B62;    
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT = $8B8B;    
  GL_PIXEL_PACK_BUFFER = $88EB;    
  GL_PIXEL_UNPACK_BUFFER = $88EC;    
  GL_PIXEL_PACK_BUFFER_BINDING = $88ED;    
  GL_PIXEL_UNPACK_BUFFER_BINDING = $88EF;    
  GL_FLOAT_MAT2x3 = $8B65;    
  GL_FLOAT_MAT2x4 = $8B66;    
  GL_FLOAT_MAT3x2 = $8B67;    
  GL_FLOAT_MAT3x4 = $8B68;    
  GL_FLOAT_MAT4x2 = $8B69;    
  GL_FLOAT_MAT4x3 = $8B6A;    
  GL_SRGB = $8C40;    
  GL_SRGB8 = $8C41;    
  GL_SRGB8_ALPHA8 = $8C43;    
  GL_COMPARE_REF_TO_TEXTURE = $884E;    
  GL_MAJOR_VERSION = $821B;    
  GL_MINOR_VERSION = $821C;    
  GL_NUM_EXTENSIONS = $821D;    
  GL_RGBA32F = $8814;    
  GL_RGB32F = $8815;    
  GL_RGBA16F = $881A;    
  GL_RGB16F = $881B;    
  GL_VERTEX_ATTRIB_ARRAY_INTEGER = $88FD;    
  GL_MAX_ARRAY_TEXTURE_LAYERS = $88FF;    
  GL_MIN_PROGRAM_TEXEL_OFFSET = $8904;    
  GL_MAX_PROGRAM_TEXEL_OFFSET = $8905;    
  GL_MAX_VARYING_COMPONENTS = $8B4B;    
  GL_TEXTURE_2D_ARRAY = $8C1A;    
  GL_TEXTURE_BINDING_2D_ARRAY = $8C1D;    
  GL_R11F_G11F_B10F = $8C3A;    
  GL_UNSIGNED_INT_10F_11F_11F_REV = $8C3B;    
  GL_RGB9_E5 = $8C3D;    
  GL_UNSIGNED_INT_5_9_9_9_REV = $8C3E;    
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = $8C76;    
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE = $8C7F;    
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = $8C80;    
  GL_TRANSFORM_FEEDBACK_VARYINGS = $8C83;    
  GL_TRANSFORM_FEEDBACK_BUFFER_START = $8C84;    
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = $8C85;    
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = $8C88;    
  GL_RASTERIZER_DISCARD = $8C89;    
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = $8C8A;    
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = $8C8B;    
  GL_INTERLEAVED_ATTRIBS = $8C8C;    
  GL_SEPARATE_ATTRIBS = $8C8D;    
  GL_TRANSFORM_FEEDBACK_BUFFER = $8C8E;    
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = $8C8F;    
  GL_RGBA32UI = $8D70;    
  GL_RGB32UI = $8D71;    
  GL_RGBA16UI = $8D76;    
  GL_RGB16UI = $8D77;    
  GL_RGBA8UI = $8D7C;    
  GL_RGB8UI = $8D7D;    
  GL_RGBA32I = $8D82;    
  GL_RGB32I = $8D83;    
  GL_RGBA16I = $8D88;    
  GL_RGB16I = $8D89;    
  GL_RGBA8I = $8D8E;    
  GL_RGB8I = $8D8F;    
  GL_RED_INTEGER = $8D94;    
  GL_RGB_INTEGER = $8D98;    
  GL_RGBA_INTEGER = $8D99;    
  GL_SAMPLER_2D_ARRAY = $8DC1;    
  GL_SAMPLER_2D_ARRAY_SHADOW = $8DC4;    
  GL_SAMPLER_CUBE_SHADOW = $8DC5;    
  GL_UNSIGNED_INT_VEC2 = $8DC6;    
  GL_UNSIGNED_INT_VEC3 = $8DC7;    
  GL_UNSIGNED_INT_VEC4 = $8DC8;    
  GL_INT_SAMPLER_2D = $8DCA;    
  GL_INT_SAMPLER_3D = $8DCB;    
  GL_INT_SAMPLER_CUBE = $8DCC;    
  GL_INT_SAMPLER_2D_ARRAY = $8DCF;    
  GL_UNSIGNED_INT_SAMPLER_2D = $8DD2;    
  GL_UNSIGNED_INT_SAMPLER_3D = $8DD3;    
  GL_UNSIGNED_INT_SAMPLER_CUBE = $8DD4;    
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = $8DD7;    
  GL_BUFFER_ACCESS_FLAGS = $911F;    
  GL_BUFFER_MAP_LENGTH = $9120;    
  GL_BUFFER_MAP_OFFSET = $9121;    
  GL_DEPTH_COMPONENT32F = $8CAC;    
  GL_DEPTH32F_STENCIL8 = $8CAD;    
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV = $8DAD;    
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = $8210;    
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = $8211;    
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = $8212;    
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = $8213;    
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = $8214;    
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = $8215;    
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = $8216;    
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = $8217;    
  GL_FRAMEBUFFER_DEFAULT = $8218;    
  GL_FRAMEBUFFER_UNDEFINED = $8219;    
  GL_DEPTH_STENCIL_ATTACHMENT = $821A;    
  GL_DEPTH_STENCIL = $84F9;    
  GL_UNSIGNED_INT_24_8 = $84FA;    
  GL_DEPTH24_STENCIL8 = $88F0;    
  GL_UNSIGNED_NORMALIZED = $8C17;    
  GL_DRAW_FRAMEBUFFER_BINDING = $8CA6;    
  GL_READ_FRAMEBUFFER = $8CA8;    
  GL_DRAW_FRAMEBUFFER = $8CA9;    
  GL_READ_FRAMEBUFFER_BINDING = $8CAA;    
  GL_RENDERBUFFER_SAMPLES = $8CAB;    
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = $8CD4;    
  GL_MAX_COLOR_ATTACHMENTS = $8CDF;    
  GL_COLOR_ATTACHMENT1 = $8CE1;    
  GL_COLOR_ATTACHMENT2 = $8CE2;    
  GL_COLOR_ATTACHMENT3 = $8CE3;    
  GL_COLOR_ATTACHMENT4 = $8CE4;    
  GL_COLOR_ATTACHMENT5 = $8CE5;    
  GL_COLOR_ATTACHMENT6 = $8CE6;    
  GL_COLOR_ATTACHMENT7 = $8CE7;    
  GL_COLOR_ATTACHMENT8 = $8CE8;    
  GL_COLOR_ATTACHMENT9 = $8CE9;    
  GL_COLOR_ATTACHMENT10 = $8CEA;    
  GL_COLOR_ATTACHMENT11 = $8CEB;    
  GL_COLOR_ATTACHMENT12 = $8CEC;    
  GL_COLOR_ATTACHMENT13 = $8CED;    
  GL_COLOR_ATTACHMENT14 = $8CEE;    
  GL_COLOR_ATTACHMENT15 = $8CEF;    
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = $8D56;    
  GL_MAX_SAMPLES = $8D57;    
  GL_HALF_FLOAT = $140B;    
  GL_MAP_READ_BIT = $0001;    
  GL_MAP_WRITE_BIT = $0002;    
  GL_MAP_INVALIDATE_RANGE_BIT = $0004;    
  GL_MAP_INVALIDATE_BUFFER_BIT = $0008;    
  GL_MAP_FLUSH_EXPLICIT_BIT = $0010;    
  GL_MAP_UNSYNCHRONIZED_BIT = $0020;    
  GL_RG = $8227;    
  GL_RG_INTEGER = $8228;    
  GL_R8 = $8229;    
  GL_RG8 = $822B;    
  GL_R16F = $822D;    
  GL_R32F = $822E;    
  GL_RG16F = $822F;    
  GL_RG32F = $8230;    
  GL_R8I = $8231;    
  GL_R8UI = $8232;    
  GL_R16I = $8233;    
  GL_R16UI = $8234;    
  GL_R32I = $8235;    
  GL_R32UI = $8236;    
  GL_RG8I = $8237;    
  GL_RG8UI = $8238;    
  GL_RG16I = $8239;    
  GL_RG16UI = $823A;    
  GL_RG32I = $823B;    
  GL_RG32UI = $823C;    
  GL_VERTEX_ARRAY_BINDING = $85B5;    
  GL_R8_SNORM = $8F94;    
  GL_RG8_SNORM = $8F95;    
  GL_RGB8_SNORM = $8F96;    
  GL_RGBA8_SNORM = $8F97;    
  GL_SIGNED_NORMALIZED = $8F9C;    
  GL_PRIMITIVE_RESTART_FIXED_INDEX = $8D69;    
  GL_COPY_READ_BUFFER = $8F36;    
  GL_COPY_WRITE_BUFFER = $8F37;    
  GL_COPY_READ_BUFFER_BINDING = $8F36;    
  GL_COPY_WRITE_BUFFER_BINDING = $8F37;    
  GL_UNIFORM_BUFFER = $8A11;    
  GL_UNIFORM_BUFFER_BINDING = $8A28;    
  GL_UNIFORM_BUFFER_START = $8A29;    
  GL_UNIFORM_BUFFER_SIZE = $8A2A;    
  GL_MAX_VERTEX_UNIFORM_BLOCKS = $8A2B;    
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS = $8A2D;    
  GL_MAX_COMBINED_UNIFORM_BLOCKS = $8A2E;    
  GL_MAX_UNIFORM_BUFFER_BINDINGS = $8A2F;    
  GL_MAX_UNIFORM_BLOCK_SIZE = $8A30;    
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = $8A31;    
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = $8A33;    
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = $8A34;    
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = $8A35;    
  GL_ACTIVE_UNIFORM_BLOCKS = $8A36;    
  GL_UNIFORM_TYPE = $8A37;    
  GL_UNIFORM_SIZE = $8A38;    
  GL_UNIFORM_NAME_LENGTH = $8A39;    
  GL_UNIFORM_BLOCK_INDEX = $8A3A;    
  GL_UNIFORM_OFFSET = $8A3B;    
  GL_UNIFORM_ARRAY_STRIDE = $8A3C;    
  GL_UNIFORM_MATRIX_STRIDE = $8A3D;    
  GL_UNIFORM_IS_ROW_MAJOR = $8A3E;    
  GL_UNIFORM_BLOCK_BINDING = $8A3F;    
  GL_UNIFORM_BLOCK_DATA_SIZE = $8A40;    
  GL_UNIFORM_BLOCK_NAME_LENGTH = $8A41;    
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = $8A42;    
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = $8A43;    
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = $8A44;    
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = $8A46;    
  GL_INVALID_INDEX = $FFFFFFFF;    
  GL_MAX_VERTEX_OUTPUT_COMPONENTS = $9122;    
  GL_MAX_FRAGMENT_INPUT_COMPONENTS = $9125;    
  GL_MAX_SERVER_WAIT_TIMEOUT = $9111;    
  GL_OBJECT_TYPE = $9112;    
  GL_SYNC_CONDITION = $9113;    
  GL_SYNC_STATUS = $9114;    
  GL_SYNC_FLAGS = $9115;    
  GL_SYNC_FENCE = $9116;    
  GL_SYNC_GPU_COMMANDS_COMPLETE = $9117;    
  GL_UNSIGNALED = $9118;    
  GL_SIGNALED = $9119;    
  GL_ALREADY_SIGNALED = $911A;    
  GL_TIMEOUT_EXPIRED = $911B;    
  GL_CONDITION_SATISFIED = $911C;    
  GL_WAIT_FAILED = $911D;    
  GL_SYNC_FLUSH_COMMANDS_BIT = $00000001;    
  GL_TIMEOUT_IGNORED = $FFFFFFFFFFFFFFFF;    
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR = $88FE;    
  GL_ANY_SAMPLES_PASSED = $8C2F;    
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE = $8D6A;    
  GL_SAMPLER_BINDING = $8919;    
  GL_RGB10_A2UI = $906F;    
  GL_TEXTURE_SWIZZLE_R = $8E42;    
  GL_TEXTURE_SWIZZLE_G = $8E43;    
  GL_TEXTURE_SWIZZLE_B = $8E44;    
  GL_TEXTURE_SWIZZLE_A = $8E45;    
  GL_GREEN = $1904;    
  GL_BLUE = $1905;    
  GL_INT_2_10_10_10_REV = $8D9F;    
  GL_TRANSFORM_FEEDBACK = $8E22;    
  GL_TRANSFORM_FEEDBACK_PAUSED = $8E23;    
  GL_TRANSFORM_FEEDBACK_ACTIVE = $8E24;    
  GL_TRANSFORM_FEEDBACK_BINDING = $8E25;    
  GL_PROGRAM_BINARY_RETRIEVABLE_HINT = $8257;    
  GL_PROGRAM_BINARY_LENGTH = $8741;    
  GL_NUM_PROGRAM_BINARY_FORMATS = $87FE;    
  GL_PROGRAM_BINARY_FORMATS = $87FF;    
  GL_COMPRESSED_R11_EAC = $9270;    
  GL_COMPRESSED_SIGNED_R11_EAC = $9271;    
  GL_COMPRESSED_RG11_EAC = $9272;    
  GL_COMPRESSED_SIGNED_RG11_EAC = $9273;    
  GL_COMPRESSED_RGB8_ETC2 = $9274;    
  GL_COMPRESSED_SRGB8_ETC2 = $9275;    
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $9276;    
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $9277;    
  GL_COMPRESSED_RGBA8_ETC2_EAC = $9278;    
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = $9279;    
  GL_TEXTURE_IMMUTABLE_FORMAT = $912F;    
  GL_MAX_ELEMENT_INDEX = $8D6B;    
  GL_NUM_SAMPLE_COUNTS = $9380;    
  GL_TEXTURE_IMMUTABLE_LEVELS = $82DF;    

var
    glReadBuffer : procedure(mode:GLenum);GLES30_CALL;
    glDrawRangeElements : procedure(mode:GLenum; start:GLuint; _end:GLuint; count:GLsizei; _type:GLenum; 
      indices:pointer);GLES30_CALL;
    glTexImage3D : procedure(target:GLenum; level:GLint; internalformat:GLint; width:GLsizei; height:GLsizei; 
      depth:GLsizei; border:GLint; format:GLenum; _type:GLenum; pixels:pointer);GLES30_CALL;
    glTexSubImage3D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; zoffset:GLint; 
      width:GLsizei; height:GLsizei; depth:GLsizei; format:GLenum; _type:GLenum; 
      pixels:pointer);GLES30_CALL;
    glCopyTexSubImage3D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; zoffset:GLint; 
      x:GLint; y:GLint; width:GLsizei; height:GLsizei);GLES30_CALL;
    glCompressedTexImage3D : procedure(target:GLenum; level:GLint; internalformat:GLenum; width:GLsizei; height:GLsizei; 
      depth:GLsizei; border:GLint; imageSize:GLsizei; data:pointer);GLES30_CALL;
    glCompressedTexSubImage3D : procedure(target:GLenum; level:GLint; xoffset:GLint; yoffset:GLint; zoffset:GLint; 
      width:GLsizei; height:GLsizei; depth:GLsizei; format:GLenum; imageSize:GLsizei; 
      data:pointer);GLES30_CALL;
    glGenQueries : procedure(n:GLsizei; ids:PGLuint);GLES30_CALL;
    glDeleteQueries : procedure(n:GLsizei; ids:PGLuint);GLES30_CALL;
    glIsQuery : function(id:GLuint):GLboolean;GLES30_CALL;
    glBeginQuery : procedure(target:GLenum; id:GLuint);GLES30_CALL;
    glEndQuery : procedure(target:GLenum);GLES30_CALL;
    glGetQueryiv : procedure(target:GLenum; pname:GLenum; params:PGLint);GLES30_CALL;
    glGetQueryObjectuiv : procedure(id:GLuint; pname:GLenum; params:PGLuint);GLES30_CALL;
    glUnmapBuffer : function(target:GLenum):GLboolean;GLES30_CALL;
    glGetBufferPointerv : procedure(target:GLenum; pname:GLenum; params:Ppointer);GLES30_CALL;
    glDrawBuffers : procedure(n:GLsizei; bufs:PGLenum);GLES30_CALL;
    glUniformMatrix2x3fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glUniformMatrix3x2fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glUniformMatrix2x4fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glUniformMatrix4x2fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glUniformMatrix3x4fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glUniformMatrix4x3fv : procedure(location:GLint; count:GLsizei; transpose:GLboolean; value:PGLfloat);GLES30_CALL;
    glBlitFramebuffer : procedure(srcX0:GLint; srcY0:GLint; srcX1:GLint; srcY1:GLint; dstX0:GLint; 
      dstY0:GLint; dstX1:GLint; dstY1:GLint; mask:GLbitfield; filter:GLenum);GLES30_CALL;
    glRenderbufferStorageMultisample : procedure(target:GLenum; samples:GLsizei; internalformat:GLenum; width:GLsizei; height:GLsizei);GLES30_CALL;
    glFramebufferTextureLayer : procedure(target:GLenum; attachment:GLenum; texture:GLuint; level:GLint; layer:GLint);GLES30_CALL;
    glMapBufferRange : function(target:GLenum; offset:GLintptr; length:GLsizeiptr; access:GLbitfield):pointer;GLES30_CALL;
    glFlushMappedBufferRange : procedure(target:GLenum; offset:GLintptr; length:GLsizeiptr);GLES30_CALL;
    glBindVertexArray : procedure(_array:GLuint);GLES30_CALL;
    glDeleteVertexArrays : procedure(n:GLsizei; arrays:PGLuint);GLES30_CALL;
    glGenVertexArrays : procedure(n:GLsizei; arrays:PGLuint);GLES30_CALL;
    glIsVertexArray : function(_array:GLuint):GLboolean;GLES30_CALL;
    glGetIntegeri_v : procedure(target:GLenum; index:GLuint; data:PGLint);GLES30_CALL;
    glBeginTransformFeedback : procedure(primitiveMode:GLenum);GLES30_CALL;
    glEndTransformFeedback : procedure;GLES30_CALL;
    glBindBufferRange : procedure(target:GLenum; index:GLuint; buffer:GLuint; offset:GLintptr; size:GLsizeiptr);GLES30_CALL;
    glBindBufferBase : procedure(target:GLenum; index:GLuint; buffer:GLuint);GLES30_CALL;
    glTransformFeedbackVaryings : procedure(programID:GLuint; count:GLsizei; varyings:Ppchar; bufferMode:GLenum);GLES30_CALL;
    glGetTransformFeedbackVarying : procedure(programID:GLuint; index:GLuint; bufSize:GLsizei; length:PGLsizei; size:PGLsizei; 
      _type:PGLenum; name:pchar);GLES30_CALL;
    glVertexAttribIPointer : procedure(index:GLuint; size:GLint; _type:GLenum; stride:GLsizei; pointer:pointer);GLES30_CALL;
    glGetVertexAttribIiv : procedure(index:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
    glGetVertexAttribIuiv : procedure(index:GLuint; pname:GLenum; params:PGLuint);GLES30_CALL;
    glVertexAttribI4i : procedure(index:GLuint; x:GLint; y:GLint; z:GLint; w:GLint);GLES30_CALL;
    glVertexAttribI4ui : procedure(index:GLuint; x:GLuint; y:GLuint; z:GLuint; w:GLuint);GLES30_CALL;
    glVertexAttribI4iv : procedure(index:GLuint; v:PGLint);GLES30_CALL;
    glVertexAttribI4uiv : procedure(index:GLuint; v:PGLuint);GLES30_CALL;
    glGetUniformuiv : procedure(programID:GLuint; location:GLint; params:PGLuint);GLES30_CALL;
    glGetFragDataLocation : function(programID:GLuint; name:pchar):GLint;GLES30_CALL;
    glUniform1ui : procedure(location:GLint; v0:GLuint);GLES30_CALL;
    glUniform2ui : procedure(location:GLint; v0:GLuint; v1:GLuint);GLES30_CALL;
    glUniform3ui : procedure(location:GLint; v0:GLuint; v1:GLuint; v2:GLuint);GLES30_CALL;
    glUniform4ui : procedure(location:GLint; v0:GLuint; v1:GLuint; v2:GLuint; v3:GLuint);GLES30_CALL;
    glUniform1uiv : procedure(location:GLint; count:GLsizei; value:PGLuint);GLES30_CALL;
    glUniform2uiv : procedure(location:GLint; count:GLsizei; value:PGLuint);GLES30_CALL;
    glUniform3uiv : procedure(location:GLint; count:GLsizei; value:PGLuint);GLES30_CALL;
    glUniform4uiv : procedure(location:GLint; count:GLsizei; value:PGLuint);GLES30_CALL;
    glClearBufferiv : procedure(buffer:GLenum; drawbuffer:GLint; value:PGLint);GLES30_CALL;
    glClearBufferuiv : procedure(buffer:GLenum; drawbuffer:GLint; value:PGLuint);GLES30_CALL;
    glClearBufferfv : procedure(buffer:GLenum; drawbuffer:GLint; value:PGLfloat);GLES30_CALL;
    glClearBufferfi : procedure(buffer:GLenum; drawbuffer:GLint; depth:GLfloat; stencil:GLint);GLES30_CALL;
    glGetStringi : function(name:GLenum; index:GLuint):pchar;GLES30_CALL;
    glCopyBufferSubData : procedure(readTarget:GLenum; writeTarget:GLenum; readOffset:GLintptr; writeOffset:GLintptr; size:GLsizeiptr);GLES30_CALL;
    glGetUniformIndices : procedure(programID:GLuint; uniformCount:GLsizei; uniformNames:Ppchar; uniformIndices:PGLuint);GLES30_CALL;
    glGetActiveUniformsiv : procedure(programID:GLuint; uniformCount:GLsizei; uniformIndices:PGLuint; pname:GLenum; params:PGLint);GLES30_CALL;
    glGetUniformBlockIndex : function(programID:GLuint; uniformBlockName:pchar):GLuint;GLES30_CALL;
    glGetActiveUniformBlockiv : procedure(programID:GLuint; uniformBlockIndex:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
    glGetActiveUniformBlockName : procedure(programID:GLuint; uniformBlockIndex:GLuint; bufSize:GLsizei; length:PGLsizei; uniformBlockName:pchar);GLES30_CALL;
    glUniformBlockBinding : procedure(programID:GLuint; uniformBlockIndex:GLuint; uniformBlockBinding:GLuint);GLES30_CALL;
    glDrawArraysInstanced : procedure(mode:GLenum; first:GLint; count:GLsizei; instancecount:GLsizei);GLES30_CALL;
    glDrawElementsInstanced : procedure(mode:GLenum; count:GLsizei; _type:GLenum; indices:pointer; instancecount:GLsizei);GLES30_CALL;
    glFenceSync : function(condition:GLenum; flags:GLbitfield):GLsync;GLES30_CALL;
    glIsSync : function(sync:GLsync):GLboolean;GLES30_CALL;
    glDeleteSync : procedure(sync:GLsync);GLES30_CALL;
    glClientWaitSync : function(sync:GLsync; flags:GLbitfield; timeout:GLuint64):GLenum;GLES30_CALL;
    glWaitSync : procedure(sync:GLsync; flags:GLbitfield; timeout:GLuint64);GLES30_CALL;
    glGetInteger64v : procedure(pname:GLenum; data:PGLint64);GLES30_CALL;
    glGetSynciv : procedure(sync:GLsync; pname:GLenum; bufSize:GLsizei; length:PGLsizei; values:PGLint);GLES30_CALL;
    glGetInteger64i_v : procedure(target:GLenum; index:GLuint; data:PGLint64);GLES30_CALL;
    glGetBufferParameteri64v : procedure(target:GLenum; pname:GLenum; params:PGLint64);GLES30_CALL;
    glGenSamplers : procedure(count:GLsizei; samplers:PGLuint);GLES30_CALL;
    glDeleteSamplers : procedure(count:GLsizei; samplers:PGLuint);GLES30_CALL;
    glIsSampler : function(sampler:GLuint):GLboolean;GLES30_CALL;
    glBindSampler : procedure(_unit:GLuint; sampler:GLuint);GLES30_CALL;
    glSamplerParameteri : procedure(sampler:GLuint; pname:GLenum; param:GLint);GLES30_CALL;
    glSamplerParameteriv : procedure(sampler:GLuint; pname:GLenum; param:PGLint);GLES30_CALL;
    glSamplerParameterf : procedure(sampler:GLuint; pname:GLenum; param:GLfloat);GLES30_CALL;
    glSamplerParameterfv : procedure(sampler:GLuint; pname:GLenum; param:PGLfloat);GLES30_CALL;
    glGetSamplerParameteriv : procedure(sampler:GLuint; pname:GLenum; params:PGLint);GLES30_CALL;
    glGetSamplerParameterfv : procedure(sampler:GLuint; pname:GLenum; params:PGLfloat);GLES30_CALL;
    glVertexAttribDivisor : procedure(index:GLuint; divisor:GLuint);GLES30_CALL;
    glBindTransformFeedback : procedure(target:GLenum; id:GLuint);GLES30_CALL;
    glDeleteTransformFeedbacks : procedure(n:GLsizei; ids:PGLuint);GLES30_CALL;
    glGenTransformFeedbacks : procedure(n:GLsizei; ids:PGLuint);GLES30_CALL;
    glIsTransformFeedback : function(id:GLuint):GLboolean;GLES30_CALL;
    glPauseTransformFeedback : procedure;GLES30_CALL;
    glResumeTransformFeedback : procedure;GLES30_CALL;
    glGetProgramBinary : procedure(programID:GLuint; bufSize:GLsizei; length:PGLsizei; binaryFormat:PGLenum; binary:pointer);GLES30_CALL;
    glProgramBinary : procedure(programID:GLuint; binaryFormat:GLenum; binary:pointer; length:GLsizei);GLES30_CALL;
    glProgramParameteri : procedure(programID:GLuint; pname:GLenum; value:GLint);GLES30_CALL;
    glInvalidateFramebuffer : procedure(target:GLenum; numAttachments:GLsizei; attachments:PGLenum);GLES30_CALL;
    glInvalidateSubFramebuffer : procedure(target:GLenum; numAttachments:GLsizei; attachments:PGLenum; x:GLint; y:GLint; 
      width:GLsizei; height:GLsizei);GLES30_CALL;
    glTexStorage2D : procedure(target:GLenum; levels:GLsizei; internalformat:GLenum; width:GLsizei; height:GLsizei);GLES30_CALL;
    glTexStorage3D : procedure(target:GLenum; levels:GLsizei; internalformat:GLenum; width:GLsizei; height:GLsizei; 
      depth:GLsizei);GLES30_CALL;
    glGetInternalformativ : procedure(target:GLenum; internalformat:GLenum; pname:GLenum; bufSize:GLsizei; params:PGLint);GLES30_CALL;

implementation

  uses
    SysUtils, dynlibs;

  var
    hlib : tlibhandle;


  procedure Freegles30;
    begin
      FreeLibrary(hlib);
      glActiveTexture:=nil;
      glAttachShader:=nil;
      glBindAttribLocation:=nil;
      glBindBuffer:=nil;
      glBindFramebuffer:=nil;
      glBindRenderbuffer:=nil;
      glBindTexture:=nil;
      glBlendColor:=nil;
      glBlendEquation:=nil;
      glBlendEquationSeparate:=nil;
      glBlendFunc:=nil;
      glBlendFuncSeparate:=nil;
      glBufferData:=nil;
      glBufferSubData:=nil;
      glCheckFramebufferStatus:=nil;
      glClear:=nil;
      glClearColor:=nil;
      glClearDepthf:=nil;
      glClearStencil:=nil;
      glColorMask:=nil;
      glCompileShader:=nil;
      glCompressedTexImage2D:=nil;
      glCompressedTexSubImage2D:=nil;
      glCopyTexImage2D:=nil;
      glCopyTexSubImage2D:=nil;
      glCreateProgram:=nil;
      glCreateShader:=nil;
      glCullFace:=nil;
      glDeleteBuffers:=nil;
      glDeleteFramebuffers:=nil;
      glDeleteProgram:=nil;
      glDeleteRenderbuffers:=nil;
      glDeleteShader:=nil;
      glDeleteTextures:=nil;
      glDepthFunc:=nil;
      glDepthMask:=nil;
      glDepthRangef:=nil;
      glDetachShader:=nil;
      glDisable:=nil;
      glDisableVertexAttribArray:=nil;
      glDrawArrays:=nil;
      glDrawElements:=nil;
      glEnable:=nil;
      glEnableVertexAttribArray:=nil;
      glFinish:=nil;
      glFlush:=nil;
      glFramebufferRenderbuffer:=nil;
      glFramebufferTexture2D:=nil;
      glFrontFace:=nil;
      glGenBuffers:=nil;
      glGenerateMipmap:=nil;
      glGenFramebuffers:=nil;
      glGenRenderbuffers:=nil;
      glGenTextures:=nil;
      glGetActiveAttrib:=nil;
      glGetActiveUniform:=nil;
      glGetAttachedShaders:=nil;
      glGetAttribLocation:=nil;
      glGetBooleanv:=nil;
      glGetBufferParameteriv:=nil;
      glGetError:=nil;
      glGetFloatv:=nil;
      glGetFramebufferAttachmentParameteriv:=nil;
      glGetIntegerv:=nil;
      glGetProgramiv:=nil;
      glGetProgramInfoLog:=nil;
      glGetRenderbufferParameteriv:=nil;
      glGetShaderiv:=nil;
      glGetShaderInfoLog:=nil;
      glGetShaderPrecisionFormat:=nil;
      glGetShaderSource:=nil;
      glGetString:=nil;
      glGetTexParameterfv:=nil;
      glGetTexParameteriv:=nil;
      glGetUniformfv:=nil;
      glGetUniformiv:=nil;
      glGetUniformLocation:=nil;
      glGetVertexAttribfv:=nil;
      glGetVertexAttribiv:=nil;
      glGetVertexAttribPointerv:=nil;
      glHint:=nil;
      glIsBuffer:=nil;
      glIsEnabled:=nil;
      glIsFramebuffer:=nil;
      glIsProgram:=nil;
      glIsRenderbuffer:=nil;
      glIsShader:=nil;
      glIsTexture:=nil;
      glLineWidth:=nil;
      glLinkProgram:=nil;
      glPixelStorei:=nil;
      glPolygonOffset:=nil;
      glReadPixels:=nil;
      glReleaseShaderCompiler:=nil;
      glRenderbufferStorage:=nil;
      glSampleCoverage:=nil;
      glScissor:=nil;
      glShaderBinary:=nil;
      glShaderSource:=nil;
      glStencilFunc:=nil;
      glStencilFuncSeparate:=nil;
      glStencilMask:=nil;
      glStencilMaskSeparate:=nil;
      glStencilOp:=nil;
      glStencilOpSeparate:=nil;
      glTexImage2D:=nil;
      glTexParameterf:=nil;
      glTexParameterfv:=nil;
      glTexParameteri:=nil;
      glTexParameteriv:=nil;
      glTexSubImage2D:=nil;
      glUniform1f:=nil;
      glUniform1fv:=nil;
      glUniform1i:=nil;
      glUniform1iv:=nil;
      glUniform2f:=nil;
      glUniform2fv:=nil;
      glUniform2i:=nil;
      glUniform2iv:=nil;
      glUniform3f:=nil;
      glUniform3fv:=nil;
      glUniform3i:=nil;
      glUniform3iv:=nil;
      glUniform4f:=nil;
      glUniform4fv:=nil;
      glUniform4i:=nil;
      glUniform4iv:=nil;
      glUniformMatrix2fv:=nil;
      glUniformMatrix3fv:=nil;
      glUniformMatrix4fv:=nil;
      glUseProgram:=nil;
      glValidateProgram:=nil;
      glVertexAttrib1f:=nil;
      glVertexAttrib1fv:=nil;
      glVertexAttrib2f:=nil;
      glVertexAttrib2fv:=nil;
      glVertexAttrib3f:=nil;
      glVertexAttrib3fv:=nil;
      glVertexAttrib4f:=nil;
      glVertexAttrib4fv:=nil;
      glVertexAttribPointer:=nil;
      glViewport:=nil;
      glReadBuffer:=nil;
      glDrawRangeElements:=nil;
      glTexImage3D:=nil;
      glTexSubImage3D:=nil;
      glCopyTexSubImage3D:=nil;
      glCompressedTexImage3D:=nil;
      glCompressedTexSubImage3D:=nil;
      glGenQueries:=nil;
      glDeleteQueries:=nil;
      glIsQuery:=nil;
      glBeginQuery:=nil;
      glEndQuery:=nil;
      glGetQueryiv:=nil;
      glGetQueryObjectuiv:=nil;
      glUnmapBuffer:=nil;
      glGetBufferPointerv:=nil;
      glDrawBuffers:=nil;
      glUniformMatrix2x3fv:=nil;
      glUniformMatrix3x2fv:=nil;
      glUniformMatrix2x4fv:=nil;
      glUniformMatrix4x2fv:=nil;
      glUniformMatrix3x4fv:=nil;
      glUniformMatrix4x3fv:=nil;
      glBlitFramebuffer:=nil;
      glRenderbufferStorageMultisample:=nil;
      glFramebufferTextureLayer:=nil;
      glMapBufferRange:=nil;
      glFlushMappedBufferRange:=nil;
      glBindVertexArray:=nil;
      glDeleteVertexArrays:=nil;
      glGenVertexArrays:=nil;
      glIsVertexArray:=nil;
      glGetIntegeri_v:=nil;
      glBeginTransformFeedback:=nil;
      glEndTransformFeedback:=nil;
      glBindBufferRange:=nil;
      glBindBufferBase:=nil;
      glTransformFeedbackVaryings:=nil;
      glGetTransformFeedbackVarying:=nil;
      glVertexAttribIPointer:=nil;
      glGetVertexAttribIiv:=nil;
      glGetVertexAttribIuiv:=nil;
      glVertexAttribI4i:=nil;
      glVertexAttribI4ui:=nil;
      glVertexAttribI4iv:=nil;
      glVertexAttribI4uiv:=nil;
      glGetUniformuiv:=nil;
      glGetFragDataLocation:=nil;
      glUniform1ui:=nil;
      glUniform2ui:=nil;
      glUniform3ui:=nil;
      glUniform4ui:=nil;
      glUniform1uiv:=nil;
      glUniform2uiv:=nil;
      glUniform3uiv:=nil;
      glUniform4uiv:=nil;
      glClearBufferiv:=nil;
      glClearBufferuiv:=nil;
      glClearBufferfv:=nil;
      glClearBufferfi:=nil;
      glGetStringi:=nil;
      glCopyBufferSubData:=nil;
      glGetUniformIndices:=nil;
      glGetActiveUniformsiv:=nil;
      glGetUniformBlockIndex:=nil;
      glGetActiveUniformBlockiv:=nil;
      glGetActiveUniformBlockName:=nil;
      glUniformBlockBinding:=nil;
      glDrawArraysInstanced:=nil;
      glDrawElementsInstanced:=nil;
      glFenceSync:=nil;
      glIsSync:=nil;
      glDeleteSync:=nil;
      glClientWaitSync:=nil;
      glWaitSync:=nil;
      glGetInteger64v:=nil;
      glGetSynciv:=nil;
      glGetInteger64i_v:=nil;
      glGetBufferParameteri64v:=nil;
      glGenSamplers:=nil;
      glDeleteSamplers:=nil;
      glIsSampler:=nil;
      glBindSampler:=nil;
      glSamplerParameteri:=nil;
      glSamplerParameteriv:=nil;
      glSamplerParameterf:=nil;
      glSamplerParameterfv:=nil;
      glGetSamplerParameteriv:=nil;
      glGetSamplerParameterfv:=nil;
      glVertexAttribDivisor:=nil;
      glBindTransformFeedback:=nil;
      glDeleteTransformFeedbacks:=nil;
      glGenTransformFeedbacks:=nil;
      glIsTransformFeedback:=nil;
      glPauseTransformFeedback:=nil;
      glResumeTransformFeedback:=nil;
      glGetProgramBinary:=nil;
      glProgramBinary:=nil;
      glProgramParameteri:=nil;
      glInvalidateFramebuffer:=nil;
      glInvalidateSubFramebuffer:=nil;
      glTexStorage2D:=nil;
      glTexStorage3D:=nil;
      glGetInternalformativ:=nil;
    end;


  procedure Loadgles30(lib : pchar);
    begin
      Freegles30;
      hlib:=LoadLibrary(lib);
      if hlib=0 then
        raise Exception.Create(format('Could not load library: %s',[lib]));

      pointer(glActiveTexture):=GetProcAddress(hlib,'glActiveTexture');
      pointer(glAttachShader):=GetProcAddress(hlib,'glAttachShader');
      pointer(glBindAttribLocation):=GetProcAddress(hlib,'glBindAttribLocation');
      pointer(glBindBuffer):=GetProcAddress(hlib,'glBindBuffer');
      pointer(glBindFramebuffer):=GetProcAddress(hlib,'glBindFramebuffer');
      pointer(glBindRenderbuffer):=GetProcAddress(hlib,'glBindRenderbuffer');
      pointer(glBindTexture):=GetProcAddress(hlib,'glBindTexture');
      pointer(glBlendColor):=GetProcAddress(hlib,'glBlendColor');
      pointer(glBlendEquation):=GetProcAddress(hlib,'glBlendEquation');
      pointer(glBlendEquationSeparate):=GetProcAddress(hlib,'glBlendEquationSeparate');
      pointer(glBlendFunc):=GetProcAddress(hlib,'glBlendFunc');
      pointer(glBlendFuncSeparate):=GetProcAddress(hlib,'glBlendFuncSeparate');
      pointer(glBufferData):=GetProcAddress(hlib,'glBufferData');
      pointer(glBufferSubData):=GetProcAddress(hlib,'glBufferSubData');
      pointer(glCheckFramebufferStatus):=GetProcAddress(hlib,'glCheckFramebufferStatus');
      pointer(glClear):=GetProcAddress(hlib,'glClear');
      pointer(glClearColor):=GetProcAddress(hlib,'glClearColor');
      pointer(glClearDepthf):=GetProcAddress(hlib,'glClearDepthf');
      pointer(glClearStencil):=GetProcAddress(hlib,'glClearStencil');
      pointer(glColorMask):=GetProcAddress(hlib,'glColorMask');
      pointer(glCompileShader):=GetProcAddress(hlib,'glCompileShader');
      pointer(glCompressedTexImage2D):=GetProcAddress(hlib,'glCompressedTexImage2D');
      pointer(glCompressedTexSubImage2D):=GetProcAddress(hlib,'glCompressedTexSubImage2D');
      pointer(glCopyTexImage2D):=GetProcAddress(hlib,'glCopyTexImage2D');
      pointer(glCopyTexSubImage2D):=GetProcAddress(hlib,'glCopyTexSubImage2D');
      pointer(glCreateProgram):=GetProcAddress(hlib,'glCreateProgram');
      pointer(glCreateShader):=GetProcAddress(hlib,'glCreateShader');
      pointer(glCullFace):=GetProcAddress(hlib,'glCullFace');
      pointer(glDeleteBuffers):=GetProcAddress(hlib,'glDeleteBuffers');
      pointer(glDeleteFramebuffers):=GetProcAddress(hlib,'glDeleteFramebuffers');
      pointer(glDeleteProgram):=GetProcAddress(hlib,'glDeleteProgram');
      pointer(glDeleteRenderbuffers):=GetProcAddress(hlib,'glDeleteRenderbuffers');
      pointer(glDeleteShader):=GetProcAddress(hlib,'glDeleteShader');
      pointer(glDeleteTextures):=GetProcAddress(hlib,'glDeleteTextures');
      pointer(glDepthFunc):=GetProcAddress(hlib,'glDepthFunc');
      pointer(glDepthMask):=GetProcAddress(hlib,'glDepthMask');
      pointer(glDepthRangef):=GetProcAddress(hlib,'glDepthRangef');
      pointer(glDetachShader):=GetProcAddress(hlib,'glDetachShader');
      pointer(glDisable):=GetProcAddress(hlib,'glDisable');
      pointer(glDisableVertexAttribArray):=GetProcAddress(hlib,'glDisableVertexAttribArray');
      pointer(glDrawArrays):=GetProcAddress(hlib,'glDrawArrays');
      pointer(glDrawElements):=GetProcAddress(hlib,'glDrawElements');
      pointer(glEnable):=GetProcAddress(hlib,'glEnable');
      pointer(glEnableVertexAttribArray):=GetProcAddress(hlib,'glEnableVertexAttribArray');
      pointer(glFinish):=GetProcAddress(hlib,'glFinish');
      pointer(glFlush):=GetProcAddress(hlib,'glFlush');
      pointer(glFramebufferRenderbuffer):=GetProcAddress(hlib,'glFramebufferRenderbuffer');
      pointer(glFramebufferTexture2D):=GetProcAddress(hlib,'glFramebufferTexture2D');
      pointer(glFrontFace):=GetProcAddress(hlib,'glFrontFace');
      pointer(glGenBuffers):=GetProcAddress(hlib,'glGenBuffers');
      pointer(glGenerateMipmap):=GetProcAddress(hlib,'glGenerateMipmap');
      pointer(glGenFramebuffers):=GetProcAddress(hlib,'glGenFramebuffers');
      pointer(glGenRenderbuffers):=GetProcAddress(hlib,'glGenRenderbuffers');
      pointer(glGenTextures):=GetProcAddress(hlib,'glGenTextures');
      pointer(glGetActiveAttrib):=GetProcAddress(hlib,'glGetActiveAttrib');
      pointer(glGetActiveUniform):=GetProcAddress(hlib,'glGetActiveUniform');
      pointer(glGetAttachedShaders):=GetProcAddress(hlib,'glGetAttachedShaders');
      pointer(glGetAttribLocation):=GetProcAddress(hlib,'glGetAttribLocation');
      pointer(glGetBooleanv):=GetProcAddress(hlib,'glGetBooleanv');
      pointer(glGetBufferParameteriv):=GetProcAddress(hlib,'glGetBufferParameteriv');
      pointer(glGetError):=GetProcAddress(hlib,'glGetError');
      pointer(glGetFloatv):=GetProcAddress(hlib,'glGetFloatv');
      pointer(glGetFramebufferAttachmentParameteriv):=GetProcAddress(hlib,'glGetFramebufferAttachmentParameteriv');
      pointer(glGetIntegerv):=GetProcAddress(hlib,'glGetIntegerv');
      pointer(glGetProgramiv):=GetProcAddress(hlib,'glGetProgramiv');
      pointer(glGetProgramInfoLog):=GetProcAddress(hlib,'glGetProgramInfoLog');
      pointer(glGetRenderbufferParameteriv):=GetProcAddress(hlib,'glGetRenderbufferParameteriv');
      pointer(glGetShaderiv):=GetProcAddress(hlib,'glGetShaderiv');
      pointer(glGetShaderInfoLog):=GetProcAddress(hlib,'glGetShaderInfoLog');
      pointer(glGetShaderPrecisionFormat):=GetProcAddress(hlib,'glGetShaderPrecisionFormat');
      pointer(glGetShaderSource):=GetProcAddress(hlib,'glGetShaderSource');
      pointer(glGetString):=GetProcAddress(hlib,'glGetString');
      pointer(glGetTexParameterfv):=GetProcAddress(hlib,'glGetTexParameterfv');
      pointer(glGetTexParameteriv):=GetProcAddress(hlib,'glGetTexParameteriv');
      pointer(glGetUniformfv):=GetProcAddress(hlib,'glGetUniformfv');
      pointer(glGetUniformiv):=GetProcAddress(hlib,'glGetUniformiv');
      pointer(glGetUniformLocation):=GetProcAddress(hlib,'glGetUniformLocation');
      pointer(glGetVertexAttribfv):=GetProcAddress(hlib,'glGetVertexAttribfv');
      pointer(glGetVertexAttribiv):=GetProcAddress(hlib,'glGetVertexAttribiv');
      pointer(glGetVertexAttribPointerv):=GetProcAddress(hlib,'glGetVertexAttribPointerv');
      pointer(glHint):=GetProcAddress(hlib,'glHint');
      pointer(glIsBuffer):=GetProcAddress(hlib,'glIsBuffer');
      pointer(glIsEnabled):=GetProcAddress(hlib,'glIsEnabled');
      pointer(glIsFramebuffer):=GetProcAddress(hlib,'glIsFramebuffer');
      pointer(glIsProgram):=GetProcAddress(hlib,'glIsProgram');
      pointer(glIsRenderbuffer):=GetProcAddress(hlib,'glIsRenderbuffer');
      pointer(glIsShader):=GetProcAddress(hlib,'glIsShader');
      pointer(glIsTexture):=GetProcAddress(hlib,'glIsTexture');
      pointer(glLineWidth):=GetProcAddress(hlib,'glLineWidth');
      pointer(glLinkProgram):=GetProcAddress(hlib,'glLinkProgram');
      pointer(glPixelStorei):=GetProcAddress(hlib,'glPixelStorei');
      pointer(glPolygonOffset):=GetProcAddress(hlib,'glPolygonOffset');
      pointer(glReadPixels):=GetProcAddress(hlib,'glReadPixels');
      pointer(glReleaseShaderCompiler):=GetProcAddress(hlib,'glReleaseShaderCompiler');
      pointer(glRenderbufferStorage):=GetProcAddress(hlib,'glRenderbufferStorage');
      pointer(glSampleCoverage):=GetProcAddress(hlib,'glSampleCoverage');
      pointer(glScissor):=GetProcAddress(hlib,'glScissor');
      pointer(glShaderBinary):=GetProcAddress(hlib,'glShaderBinary');
      pointer(glShaderSource):=GetProcAddress(hlib,'glShaderSource');
      pointer(glStencilFunc):=GetProcAddress(hlib,'glStencilFunc');
      pointer(glStencilFuncSeparate):=GetProcAddress(hlib,'glStencilFuncSeparate');
      pointer(glStencilMask):=GetProcAddress(hlib,'glStencilMask');
      pointer(glStencilMaskSeparate):=GetProcAddress(hlib,'glStencilMaskSeparate');
      pointer(glStencilOp):=GetProcAddress(hlib,'glStencilOp');
      pointer(glStencilOpSeparate):=GetProcAddress(hlib,'glStencilOpSeparate');
      pointer(glTexImage2D):=GetProcAddress(hlib,'glTexImage2D');
      pointer(glTexParameterf):=GetProcAddress(hlib,'glTexParameterf');
      pointer(glTexParameterfv):=GetProcAddress(hlib,'glTexParameterfv');
      pointer(glTexParameteri):=GetProcAddress(hlib,'glTexParameteri');
      pointer(glTexParameteriv):=GetProcAddress(hlib,'glTexParameteriv');
      pointer(glTexSubImage2D):=GetProcAddress(hlib,'glTexSubImage2D');
      pointer(glUniform1f):=GetProcAddress(hlib,'glUniform1f');
      pointer(glUniform1fv):=GetProcAddress(hlib,'glUniform1fv');
      pointer(glUniform1i):=GetProcAddress(hlib,'glUniform1i');
      pointer(glUniform1iv):=GetProcAddress(hlib,'glUniform1iv');
      pointer(glUniform2f):=GetProcAddress(hlib,'glUniform2f');
      pointer(glUniform2fv):=GetProcAddress(hlib,'glUniform2fv');
      pointer(glUniform2i):=GetProcAddress(hlib,'glUniform2i');
      pointer(glUniform2iv):=GetProcAddress(hlib,'glUniform2iv');
      pointer(glUniform3f):=GetProcAddress(hlib,'glUniform3f');
      pointer(glUniform3fv):=GetProcAddress(hlib,'glUniform3fv');
      pointer(glUniform3i):=GetProcAddress(hlib,'glUniform3i');
      pointer(glUniform3iv):=GetProcAddress(hlib,'glUniform3iv');
      pointer(glUniform4f):=GetProcAddress(hlib,'glUniform4f');
      pointer(glUniform4fv):=GetProcAddress(hlib,'glUniform4fv');
      pointer(glUniform4i):=GetProcAddress(hlib,'glUniform4i');
      pointer(glUniform4iv):=GetProcAddress(hlib,'glUniform4iv');
      pointer(glUniformMatrix2fv):=GetProcAddress(hlib,'glUniformMatrix2fv');
      pointer(glUniformMatrix3fv):=GetProcAddress(hlib,'glUniformMatrix3fv');
      pointer(glUniformMatrix4fv):=GetProcAddress(hlib,'glUniformMatrix4fv');
      pointer(glUseProgram):=GetProcAddress(hlib,'glUseProgram');
      pointer(glValidateProgram):=GetProcAddress(hlib,'glValidateProgram');
      pointer(glVertexAttrib1f):=GetProcAddress(hlib,'glVertexAttrib1f');
      pointer(glVertexAttrib1fv):=GetProcAddress(hlib,'glVertexAttrib1fv');
      pointer(glVertexAttrib2f):=GetProcAddress(hlib,'glVertexAttrib2f');
      pointer(glVertexAttrib2fv):=GetProcAddress(hlib,'glVertexAttrib2fv');
      pointer(glVertexAttrib3f):=GetProcAddress(hlib,'glVertexAttrib3f');
      pointer(glVertexAttrib3fv):=GetProcAddress(hlib,'glVertexAttrib3fv');
      pointer(glVertexAttrib4f):=GetProcAddress(hlib,'glVertexAttrib4f');
      pointer(glVertexAttrib4fv):=GetProcAddress(hlib,'glVertexAttrib4fv');
      pointer(glVertexAttribPointer):=GetProcAddress(hlib,'glVertexAttribPointer');
      pointer(glViewport):=GetProcAddress(hlib,'glViewport');
      pointer(glReadBuffer):=GetProcAddress(hlib,'glReadBuffer');
      pointer(glDrawRangeElements):=GetProcAddress(hlib,'glDrawRangeElements');
      pointer(glTexImage3D):=GetProcAddress(hlib,'glTexImage3D');
      pointer(glTexSubImage3D):=GetProcAddress(hlib,'glTexSubImage3D');
      pointer(glCopyTexSubImage3D):=GetProcAddress(hlib,'glCopyTexSubImage3D');
      pointer(glCompressedTexImage3D):=GetProcAddress(hlib,'glCompressedTexImage3D');
      pointer(glCompressedTexSubImage3D):=GetProcAddress(hlib,'glCompressedTexSubImage3D');
      pointer(glGenQueries):=GetProcAddress(hlib,'glGenQueries');
      pointer(glDeleteQueries):=GetProcAddress(hlib,'glDeleteQueries');
      pointer(glIsQuery):=GetProcAddress(hlib,'glIsQuery');
      pointer(glBeginQuery):=GetProcAddress(hlib,'glBeginQuery');
      pointer(glEndQuery):=GetProcAddress(hlib,'glEndQuery');
      pointer(glGetQueryiv):=GetProcAddress(hlib,'glGetQueryiv');
      pointer(glGetQueryObjectuiv):=GetProcAddress(hlib,'glGetQueryObjectuiv');
      pointer(glUnmapBuffer):=GetProcAddress(hlib,'glUnmapBuffer');
      pointer(glGetBufferPointerv):=GetProcAddress(hlib,'glGetBufferPointerv');
      pointer(glDrawBuffers):=GetProcAddress(hlib,'glDrawBuffers');
      pointer(glUniformMatrix2x3fv):=GetProcAddress(hlib,'glUniformMatrix2x3fv');
      pointer(glUniformMatrix3x2fv):=GetProcAddress(hlib,'glUniformMatrix3x2fv');
      pointer(glUniformMatrix2x4fv):=GetProcAddress(hlib,'glUniformMatrix2x4fv');
      pointer(glUniformMatrix4x2fv):=GetProcAddress(hlib,'glUniformMatrix4x2fv');
      pointer(glUniformMatrix3x4fv):=GetProcAddress(hlib,'glUniformMatrix3x4fv');
      pointer(glUniformMatrix4x3fv):=GetProcAddress(hlib,'glUniformMatrix4x3fv');
      pointer(glBlitFramebuffer):=GetProcAddress(hlib,'glBlitFramebuffer');
      pointer(glRenderbufferStorageMultisample):=GetProcAddress(hlib,'glRenderbufferStorageMultisample');
      pointer(glFramebufferTextureLayer):=GetProcAddress(hlib,'glFramebufferTextureLayer');
      pointer(glMapBufferRange):=GetProcAddress(hlib,'glMapBufferRange');
      pointer(glFlushMappedBufferRange):=GetProcAddress(hlib,'glFlushMappedBufferRange');
      pointer(glBindVertexArray):=GetProcAddress(hlib,'glBindVertexArray');
      pointer(glDeleteVertexArrays):=GetProcAddress(hlib,'glDeleteVertexArrays');
      pointer(glGenVertexArrays):=GetProcAddress(hlib,'glGenVertexArrays');
      pointer(glIsVertexArray):=GetProcAddress(hlib,'glIsVertexArray');
      pointer(glGetIntegeri_v):=GetProcAddress(hlib,'glGetIntegeri_v');
      pointer(glBeginTransformFeedback):=GetProcAddress(hlib,'glBeginTransformFeedback');
      pointer(glEndTransformFeedback):=GetProcAddress(hlib,'glEndTransformFeedback');
      pointer(glBindBufferRange):=GetProcAddress(hlib,'glBindBufferRange');
      pointer(glBindBufferBase):=GetProcAddress(hlib,'glBindBufferBase');
      pointer(glTransformFeedbackVaryings):=GetProcAddress(hlib,'glTransformFeedbackVaryings');
      pointer(glGetTransformFeedbackVarying):=GetProcAddress(hlib,'glGetTransformFeedbackVarying');
      pointer(glVertexAttribIPointer):=GetProcAddress(hlib,'glVertexAttribIPointer');
      pointer(glGetVertexAttribIiv):=GetProcAddress(hlib,'glGetVertexAttribIiv');
      pointer(glGetVertexAttribIuiv):=GetProcAddress(hlib,'glGetVertexAttribIuiv');
      pointer(glVertexAttribI4i):=GetProcAddress(hlib,'glVertexAttribI4i');
      pointer(glVertexAttribI4ui):=GetProcAddress(hlib,'glVertexAttribI4ui');
      pointer(glVertexAttribI4iv):=GetProcAddress(hlib,'glVertexAttribI4iv');
      pointer(glVertexAttribI4uiv):=GetProcAddress(hlib,'glVertexAttribI4uiv');
      pointer(glGetUniformuiv):=GetProcAddress(hlib,'glGetUniformuiv');
      pointer(glGetFragDataLocation):=GetProcAddress(hlib,'glGetFragDataLocation');
      pointer(glUniform1ui):=GetProcAddress(hlib,'glUniform1ui');
      pointer(glUniform2ui):=GetProcAddress(hlib,'glUniform2ui');
      pointer(glUniform3ui):=GetProcAddress(hlib,'glUniform3ui');
      pointer(glUniform4ui):=GetProcAddress(hlib,'glUniform4ui');
      pointer(glUniform1uiv):=GetProcAddress(hlib,'glUniform1uiv');
      pointer(glUniform2uiv):=GetProcAddress(hlib,'glUniform2uiv');
      pointer(glUniform3uiv):=GetProcAddress(hlib,'glUniform3uiv');
      pointer(glUniform4uiv):=GetProcAddress(hlib,'glUniform4uiv');
      pointer(glClearBufferiv):=GetProcAddress(hlib,'glClearBufferiv');
      pointer(glClearBufferuiv):=GetProcAddress(hlib,'glClearBufferuiv');
      pointer(glClearBufferfv):=GetProcAddress(hlib,'glClearBufferfv');
      pointer(glClearBufferfi):=GetProcAddress(hlib,'glClearBufferfi');
      pointer(glGetStringi):=GetProcAddress(hlib,'glGetStringi');
      pointer(glCopyBufferSubData):=GetProcAddress(hlib,'glCopyBufferSubData');
      pointer(glGetUniformIndices):=GetProcAddress(hlib,'glGetUniformIndices');
      pointer(glGetActiveUniformsiv):=GetProcAddress(hlib,'glGetActiveUniformsiv');
      pointer(glGetUniformBlockIndex):=GetProcAddress(hlib,'glGetUniformBlockIndex');
      pointer(glGetActiveUniformBlockiv):=GetProcAddress(hlib,'glGetActiveUniformBlockiv');
      pointer(glGetActiveUniformBlockName):=GetProcAddress(hlib,'glGetActiveUniformBlockName');
      pointer(glUniformBlockBinding):=GetProcAddress(hlib,'glUniformBlockBinding');
      pointer(glDrawArraysInstanced):=GetProcAddress(hlib,'glDrawArraysInstanced');
      pointer(glDrawElementsInstanced):=GetProcAddress(hlib,'glDrawElementsInstanced');
      pointer(glFenceSync):=GetProcAddress(hlib,'glFenceSync');
      pointer(glIsSync):=GetProcAddress(hlib,'glIsSync');
      pointer(glDeleteSync):=GetProcAddress(hlib,'glDeleteSync');
      pointer(glClientWaitSync):=GetProcAddress(hlib,'glClientWaitSync');
      pointer(glWaitSync):=GetProcAddress(hlib,'glWaitSync');
      pointer(glGetInteger64v):=GetProcAddress(hlib,'glGetInteger64v');
      pointer(glGetSynciv):=GetProcAddress(hlib,'glGetSynciv');
      pointer(glGetInteger64i_v):=GetProcAddress(hlib,'glGetInteger64i_v');
      pointer(glGetBufferParameteri64v):=GetProcAddress(hlib,'glGetBufferParameteri64v');
      pointer(glGenSamplers):=GetProcAddress(hlib,'glGenSamplers');
      pointer(glDeleteSamplers):=GetProcAddress(hlib,'glDeleteSamplers');
      pointer(glIsSampler):=GetProcAddress(hlib,'glIsSampler');
      pointer(glBindSampler):=GetProcAddress(hlib,'glBindSampler');
      pointer(glSamplerParameteri):=GetProcAddress(hlib,'glSamplerParameteri');
      pointer(glSamplerParameteriv):=GetProcAddress(hlib,'glSamplerParameteriv');
      pointer(glSamplerParameterf):=GetProcAddress(hlib,'glSamplerParameterf');
      pointer(glSamplerParameterfv):=GetProcAddress(hlib,'glSamplerParameterfv');
      pointer(glGetSamplerParameteriv):=GetProcAddress(hlib,'glGetSamplerParameteriv');
      pointer(glGetSamplerParameterfv):=GetProcAddress(hlib,'glGetSamplerParameterfv');
      pointer(glVertexAttribDivisor):=GetProcAddress(hlib,'glVertexAttribDivisor');
      pointer(glBindTransformFeedback):=GetProcAddress(hlib,'glBindTransformFeedback');
      pointer(glDeleteTransformFeedbacks):=GetProcAddress(hlib,'glDeleteTransformFeedbacks');
      pointer(glGenTransformFeedbacks):=GetProcAddress(hlib,'glGenTransformFeedbacks');
      pointer(glIsTransformFeedback):=GetProcAddress(hlib,'glIsTransformFeedback');
      pointer(glPauseTransformFeedback):=GetProcAddress(hlib,'glPauseTransformFeedback');
      pointer(glResumeTransformFeedback):=GetProcAddress(hlib,'glResumeTransformFeedback');
      pointer(glGetProgramBinary):=GetProcAddress(hlib,'glGetProgramBinary');
      pointer(glProgramBinary):=GetProcAddress(hlib,'glProgramBinary');
      pointer(glProgramParameteri):=GetProcAddress(hlib,'glProgramParameteri');
      pointer(glInvalidateFramebuffer):=GetProcAddress(hlib,'glInvalidateFramebuffer');
      pointer(glInvalidateSubFramebuffer):=GetProcAddress(hlib,'glInvalidateSubFramebuffer');
      pointer(glTexStorage2D):=GetProcAddress(hlib,'glTexStorage2D');
      pointer(glTexStorage3D):=GetProcAddress(hlib,'glTexStorage3D');
      pointer(glGetInternalformativ):=GetProcAddress(hlib,'glGetInternalformativ');
    end;


initialization
  Loadgles30(
    {$if defined(darwin) or defined(cpuaarch64)}
      '/System/Library/Frameworks/OpenGLES.framework/OpenGLES'
    {$else}
      {$ifdef windows}
        'libGLESv3.dll'
      {$else}
        'libGLESv3.so'
      {$endif}
    {$endif}
    );
finalization
  Freegles30;

end.
